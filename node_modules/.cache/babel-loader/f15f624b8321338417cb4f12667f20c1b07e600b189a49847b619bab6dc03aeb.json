{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dot\\\\router-project-starter\\\\router-project-starter\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from 'react';\nimport { AiOutLineEye, AiOutLineEyeInvisible } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [FormData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  function changeHandler(event) {\n    setFormData(prevData => ({\n      ...prevData,\n      [event.target.name]: event.target.value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email Address\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        value: FormData.email,\n        onChange: changeHandler,\n        placeholder: \"Enter email id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: showPassword ? \"text\" : \"password\",\n        value: FormData.email,\n        onChange: changeHandler,\n        placeholder: \"Enter Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setShowPassword(prev => !prev),\n        children: [showPassword ? /*#__PURE__*/_jsxDEV(AiOutLineEyeInvisible, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 90\n        }, this) : /*#__PURE__*/_jsxDEV(AiOutLineEye, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 119\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"qezXfWAVp8DeJcXDs6AZuhAeFvU=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","AiOutLineEye","AiOutLineEyeInvisible","jsxDEV","_jsxDEV","Login","_s","FormData","setFormData","email","password","showPassword","setShowPassword","changeHandler","event","prevData","target","name","value","children","fileName","_jsxFileName","lineNumber","columnNumber","required","type","onChange","placeholder","onClick","prev","Link","to","_c","$RefreshReg$"],"sources":["D:/Dot/router-project-starter/router-project-starter/src/pages/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport {useState} from 'react'\r\nimport {AiOutLineEye, AiOutLineEyeInvisible} from 'react-icons/ai';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [FormData, setFormData] = useState({\r\n        email: \"\", password: \"\"\r\n    })\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    function changeHandler(event){\r\n        setFormData( (prevData) => ({\r\n            ...prevData, [event.target.name]: event.target.value\r\n        }))\r\n    }\r\n    return (\r\n        <form>\r\n            <label>\r\n                <p>Email Address<sup>*</sup></p>\r\n\r\n                <input \r\n                required \r\n                type=\"text\" \r\n                value={FormData.email}\r\n                onChange={changeHandler}\r\n                placeholder=\"Enter email id\"\r\n                />\r\n            </label>\r\n\r\n            <label>\r\n                <p>Password<sup>*</sup></p>\r\n\r\n                <input \r\n                required \r\n                type={showPassword ? (\"text\") : (\"password\")} \r\n                value={FormData.email}\r\n                onChange={changeHandler}\r\n                placeholder=\"Enter Password\"\r\n                />\r\n                <span onClick={ () => setShowPassword((prev) => !prev)}>{showPassword ? (<AiOutLineEyeInvisible/>) : (<AiOutLineEye/>)} </span>\r\n\r\n                <Link to=\"#\">\r\n                    <p>\r\n                        \r\n                    </p>\r\n                </Link>\r\n            </label>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}